<?xml version="1.0" ?>
<robot>
  <gazebo reference="chassis">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="left_wheel">
      <kp>${kp_wheel}</kp>
      <kd>${kd_wheel}</kd>
      <mu1>${mu1_wheel}</mu1>
      <mu2>${mu2_wheel}</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="right_wheel">
    <kp>${kp_wheel}</kp>
    <kd>${kd_wheel}</kd>
    <mu1>${mu1_wheel}</mu1>
    <mu2>${mu2_wheel}</mu2>
    <material>Gazebo/Blue</material>
  </gazebo>

  <!-- ros_control plugin -->
  <gazebo>
    <plugin name="gazebo_ros_control"
            filename="libgazebo_ros_control.so">
      <robotNamespace>/lawn_mower</robotNamespace>
      <robotParam>/robot_description</robotParam>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <gazebo>
    <plugin filename="libgazebo_ros_diff_drive.so" name="differential_drive_controller">

      <ros>
        <namespace>/lawn_mower</namespace>
      </ros>

      <!-- wheels -->
      <left_joint>joint_right_wheel</left_joint>
      <right_joint>joint_left_wheel</right_joint>

      <!-- kinematics -->
      <wheel_separation>${base_box_x + wheel_width}</wheel_separation>
      <wheel_diameter>${wheel_radius + wheel_increment}</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>0.2</max_wheel_torque>
      <max_wheel_acceleration>0.2</max_wheel_acceleration>

      <!--input-->
      <command_topic>/lawn_mower/cmd_vel</command_topic>

      <!-- output -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>

      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>chassis</robot_base_frame>


    </plugin>
  </gazebo>

<!-- imu -->
  <gazebo>
    <plugin name="gazebo_ros_imu_controller" filename="libgazebo_ros_imu.so">
      <robotNamespace>/lawn_mower/</robotNamespace>
      <topicName>imu/data3</topicName>
      <serviceName>imu/service</serviceName>
      <bodyName>${base_name}</bodyName>
      <gaussianNoise>0</gaussianNoise>
      <rpyOffsets>0 0 0</rpyOffsets>
      <updateRate>50.0</updateRate>
      <alwaysOn>true</alwaysOn>
      <gaussianNoise>0</gaussianNoise>
    </plugin>
  </gazebo>

  <!-- camera -->
  <gazebo reference="rgb_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="rgb_camera">
        <horizontal_fov>1.2042771838760873</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>lawn_mower/camera</cameraName>
        <imageTopicName>/rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>rgb_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="left_link">
    <sensor type="camera" name="camera/left">
      <update_rate>30.0</update_rate>
      <camera name="camera/left">
        <horizontal_fov>1.274</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="left_camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>camera</namespace>
	  <argument>--ros-args</argument>
          <!-- <argument>-r</argument>
	  <argument>/camera/left/image_raw:=/camera/left/image_raw</argument> -->
        </ros>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <camera_name>left</camera_name>
        <frameName>left_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <!-- camera -->
  <gazebo reference="right_link">
    <sensor type="camera" name="right_camera">
      <update_rate>30.0</update_rate>
      <camera name="right_camera">
        <horizontal_fov>1.274</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>L8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="right_camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>camera</namespace>
	  <argument>--ros-args</argument>
          <!-- <argument>-r</argument>
	  <argument>/camera/right/image_raw:=/camera/right/image_raw</argument> -->
        </ros>
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <camera_name>right</camera_name>
        <frame_name>right_link</frame_name>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

</robot>
